{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","ShowContactInfo","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","phone","email","className","onClick","style","cursor","color","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","preventDefault","defineProperty","target","onSubmit","_this$state","newContact","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","Context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.837035e8.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport axios from 'axios'; \r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action)=>{\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':\r\n     return{\r\n        ...state,\r\n        contacts:state.contacts.filter((contact)=>{\r\n         return contact.id !== action.payload;\r\n        }) \r\n     };\r\n      case 'ADD_CONTACT':\r\n          return {\r\n              ...state,\r\n              contacts:[action.payload,...state.contacts]\r\n          };\r\n\r\n      case 'UPDATE_CONTACT':\r\n      return{\r\n          ...state,\r\n          contacts:state.contacts.map(contact=>contact.id===action.payload.id ?(contact=action.payload):contact)\r\n      }\r\n      \r\n\r\n     default:\r\n     return state;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class Provider extends Component{\r\n   state = {\r\n    contacts: [\r\n        \r\n    ],\r\n\r\n    dispatch:action=>{\r\n        this.setState(state=>reducer(state,action));\r\n    }\r\n\r\n  \r\n\r\n}\r\n\r\n async componentDidMount(){\r\n\r\n     const res= await axios.get('https://jsonplaceholder.typicode.com/users')\r\n      this.setState({\r\n          contacts:res.data\r\n      })\r\n\r\n     \r\n  } \r\n\r\n    //  componentDidMount() {\r\n\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //         .then(res => res.json())\r\n    //         .then(info => {\r\n    //             this.setState({\r\n    //                 contacts: info\r\n    //             })\r\n    //         })\r\n    // } \r\n\r\n\r\nrender(){\r\n\r\nreturn(\r\n<Context.Provider value={this.state}>\r\n\r\n{this.props.children}\r\n</Context.Provider>\r\n\r\n)\r\n\r\n}\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport propTypes from 'prop-types';\r\nimport {Consumer} from '../../Context';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component{\r\n\r\nstate={\r\n ShowContactInfo:false\r\n\r\n};\r\n\r\nonDeleteClick =async (id,dispatch)=>{\r\n\r\n    try{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    }catch(e){\r\n\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n\r\n    }\r\n    \r\n\r\n\r\n    console.log(\"clicked\");\r\n    \r\n    \r\n}\r\n\r\nrender(){\r\n   const {id, name,phone,email} = this.props.contact;\r\n    const { ShowContactInfo } = this.state;\r\n\r\n    return(\r\n\r\n          <Consumer>\r\n              \r\n              {value=>{\r\n                  const {dispatch}=value;\r\n                  return(\r\n                     \r\n                      <div className=\"card card-body mb-3\">\r\n                          <h4>{name}{\" \"}<i\r\n                              onClick={\r\n                                  () => this.setState({\r\n                                      ShowContactInfo: !this.state.ShowContactInfo\r\n                                  })\r\n                              }\r\n                              className=\"fas fa-sort-down ml-1\"\r\n                              style={{ cursor: \"pointer\", color: \"teal\" }}\r\n                          ></i>\r\n                              <i className=\"fas fa-times \" style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                                  onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                              ></i>\r\n                              <Link to={`contact/edit/${id}`} >\r\n                                <i \r\n                                \r\n                                className='fas fa-pencil-alt'\r\n                                style={{\r\n                                    cursor:'pointer',\r\n                                    float:'right',\r\n                                    marginRight:'1rem',\r\n                                    \r\n                                \r\n                                \r\n                                }}\r\n                                ></i>\r\n                              </Link>\r\n                          </h4>\r\n\r\n                          {\r\n                              ShowContactInfo ?\r\n                                  <ul className=\"list-group\">\r\n                                      <li className=\"list-group-item\">Email:{email}</li>\r\n                                      <li className=\"list-group-item\">Phone:{phone}</li>\r\n                                  </ul> : null\r\n                          }\r\n\r\n                      </div>\r\n\r\n\r\n                  )\r\n              }\r\n\r\n              }\r\n          </Consumer>\r\n\r\n\r\n\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nContact.propTypes={\r\n    contact:propTypes.object.isRequired,\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\n\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from '../../Context';\r\n\r\n class Contacts extends Component {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n     return(\r\n\r\n      <Consumer>\r\n\r\n        {(value) =>{\r\n          const {contacts}=value;\r\n          return(\r\n            \r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">contact</span> list\r\n              </h1>\r\n              {contacts.map((contact) => {\r\n                return <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  \r\n                />\r\n              })\r\n\r\n              }\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n\r\n      </Consumer>\r\n     )\r\n\r\n\r\n     \r\n  }\r\n}\r\n\r\nexport default Contacts;","import React  from 'react';\r\n\r\nimport propTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header =(props)=>{\r\n\r\n\r\nreturn(\r\n<nav className=\"navbar navbar-expand-sm navbar-dark bg-danger \">\r\n  <div className=\"container\">\r\n    <Link to=\"/about\" className='navbar-brand'>{props.branding}</Link>\r\n\r\n    <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n         <li className=\"nav-item\">\r\n           <Link to=\"/\"className=\"nav-link\"><i className=\"fas fa-home\">\r\n            </i> Home</Link>\r\n         </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\">\r\n            </i>add</Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\">\r\n            </i>about</Link>\r\n          </li>\r\n        </ul>\r\n    </div>\r\n  </div>\r\n\r\n</nav>\r\n)\r\n\r\n\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding:\"my app\"  \r\n}\r\n\r\nHeader.propTypes={\r\n    branding:propTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n const TextInputGroup=({\r\n     label,name,value,placeholder,type,onChange,error\r\n })=> {\r\n  return (\r\n      <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n\r\n          <input type={type}\r\n              name={name}\r\n              className={classnames('form-control form-control-lg',{\r\n                  'is-invalid':error\r\n              })}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={onChange}\r\n          />\r\n\r\n          {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes={\r\n    label: PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\n\r\nimport {Consumer} from '../../Context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n class AddContact extends Component {\r\n\r\n  state = {\r\n      name:'',\r\n      email:'',\r\n      phone:'',\r\n      errors:{}\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n onChange = (e) => {\r\n e.preventDefault();\r\n\r\n    this.setState({\r\n [e.target.name]:e.target.value})\r\n     }\r\n\r\n     onSubmit= async(dispatch,e)=>{\r\n      e.preventDefault()\r\n      console.log(this.state);\r\n      const {name,email,phone,errors} = this.state;\r\n      \r\n       // check for errors\r\n       if (name === '') {\r\n         this.setState({\r\n           errors: { name: \"name is required\" }\r\n         });\r\n         return\r\n       }\r\n\r\n       if (email === '') {\r\n         this.setState({\r\n           errors: { email: \"name is required\" }\r\n         });\r\n         return\r\n       }\r\n\r\n       if (phone === '') {\r\n         this.setState({\r\n           errors: { phone: \"name is required\" }\r\n         });\r\n         return\r\n       }\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      const newContact = {\r\n        \r\n        name,\r\n        email,\r\n        phone\r\n      }\r\n       const res =await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n       dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n     \r\n\r\n       this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors:{}\r\n       });\r\n\r\n       this.props.history.push('/');\r\n       \r\n       \r\n     }\r\n\r\n        \r\n\r\n\r\n  render() {\r\n  const {name,email,phone,errors}=this.state;\r\n\r\n  \r\n\r\n       \r\n     return(\r\n       <Consumer>\r\n         {value=>{\r\n           const{dispatch}=value;\r\n           return(\r\n\r\n             <div className=\"card mb-3\">\r\n               <div className=\"card-header\">add contact</div>\r\n               <div className=\"card-body\">\r\n                 <form  onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                  <TextInputGroup \r\n                  label =\"name\"\r\n                  name='name'\r\n                  placeholder=\"enter name\"\r\n                  value = {name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                  />\r\n\r\n                   <TextInputGroup\r\n                     label=\"email\"\r\n                     name='email'\r\n                     type=\"email\"\r\n                     placeholder=\"enter email\"\r\n                     value={email}\r\n                     onChange={this.onChange}\r\n                     error={errors.email}\r\n                   />\r\n\r\n                   <TextInputGroup\r\n                     label=\"phone\"\r\n                     name='phone'\r\n                     placeholder=\"enter phone\"\r\n                     value={phone}\r\n                     onChange={this.onChange}\r\n                     error={errors.phone}\r\n                   />\r\n\r\n                  \r\n                   <input type=\"submit\"\r\n                     value=\"Add Contact\"\r\n                     className=\"btn btn-block btn-primary\"\r\n                   />\r\n                 </form>\r\n               </div>\r\n             </div>\r\n\r\n           )\r\n         }}\r\n       </Consumer>\r\n     )\r\n\r\n   \r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n\r\nasync componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`) \r\n    const contact = res.data;\r\n    this.setState({\r\n        name:contact.name,\r\n        email:contact.email,\r\n        phone:contact.phone\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n// componentDidMount(){\r\n//     const {id}=this.props.match.params;\r\n\r\n//     fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n//     .then(res=>res.json())\r\n//     .then(data=>{\r\n\r\n//      this.setState({\r\n//          name:data.name,\r\n//          email:data.email,\r\n//          phone:data.phone,\r\n//      })\r\n\r\n//     })\r\n// }\r\n\r\n\r\n\r\n    onChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault()\r\n        console.log(this.state);\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        // check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: \"name is required\" }\r\n            });\r\n            return\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: \"name is required\" }\r\n            });\r\n            return\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: \"name is required\" }\r\n            });\r\n            return\r\n        }\r\n\r\n\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https:jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT',payload:res.data})\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"name\"\r\n                                        name='name'\r\n                                        placeholder=\"enter name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"email\"\r\n                                        name='email'\r\n                                        type=\"email\"\r\n                                        placeholder=\"enter email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"phone\"\r\n                                        name='phone'\r\n                                        placeholder=\"enter phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n\r\n                                    <input type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-block btn-primary\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\n const About=()=> {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About contact Manager</h1>\r\n      <p className=\"lead\">simple app to manage contacts</p>\r\n          <p className=\"text-secondary\">version 10</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\n  const NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> page not found</h1>\r\n      <p className=\"lead\"> Sorry that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\n class Test extends Component {\r\n\r\n state = {\r\n  title:'',\r\n  body:''\r\n };\r\n\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n   .then(response=>response.json())\r\n    .then(data=>{\r\n      this.setState({\r\n        title:data.title,\r\n        body:data.body\r\n      })\r\n    }\r\n    )\r\n  }\r\n\r\n  componentWillMount(){\r\n    console.log('componentwillmount...');\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('componentdidupdate...');\r\n  }\r\n\r\n componentWillUpdate(){\r\n   console.log('componentwllupdate...');\r\n }\r\n\r\n\r\n  render() {\r\n    const {title, body}=this.state;\r\n    return (\r\n      <div>\r\n        test component\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport {Provider} from './Context';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/Test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n       <Router basename={process.env.PUBLIC_URL}>\n\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container mt-2\">\n              \n              {/* <AddContact />\n              <Contacts /> */}\n              <Switch>\n                <Route exact path=\"/\" component = {Contacts} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"/about/\" component = {About} />\n                <Route path=\"/test\" component={Test} />\n                <Route component= {NotFound} />\n              </Switch>\n            </div>\n\n\n          </div>\n       </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}